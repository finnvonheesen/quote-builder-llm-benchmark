{"created": 1760696196.899065, "duration": 151.38225984573364, "exitcode": 1, "root": "/Users/finnvonheesen/Desktop/quote-builder-llm-benchmark", "environment": {}, "summary": {"passed": 9, "failed": 2, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_auth_api.py", "type": "Module"}]}, {"nodeid": "tests/test_auth_api.py", "outcome": "passed", "result": [{"nodeid": "tests/test_auth_api.py::test_happy_path_signup_login_me", "type": "Function", "lineno": 25}, {"nodeid": "tests/test_auth_api.py::test_duplicate_signup_returns_409", "type": "Function", "lineno": 35}, {"nodeid": "tests/test_auth_api.py::test_login_wrong_password_401", "type": "Function", "lineno": 41}, {"nodeid": "tests/test_auth_api.py::test_me_requires_bearer_token", "type": "Function", "lineno": 46}, {"nodeid": "tests/test_auth_api.py::test_token_expiry_short_lifetime", "type": "Function", "lineno": 51}, {"nodeid": "tests/test_auth_api.py::test_property_valid_inputs_pass_signup_then_login", "type": "Function", "lineno": 60}, {"nodeid": "tests/test_auth_api.py::test_password_policy_enforced", "type": "Function", "lineno": 73}, {"nodeid": "tests/test_auth_api.py::test_email_policy_enforced", "type": "Function", "lineno": 78}, {"nodeid": "tests/test_auth_api.py::test_error_messages_do_not_leak", "type": "Function", "lineno": 82}, {"nodeid": "tests/test_auth_api.py::test_sql_injection_defense", "type": "Function", "lineno": 88}, {"nodeid": "tests/test_auth_api.py::test_dependencies_are_minimal_and_no_debug_headers", "type": "Function", "lineno": 94}]}], "tests": [{"nodeid": "tests/test_auth_api.py::test_happy_path_signup_login_me", "lineno": 25, "outcome": "passed", "keywords": ["test_happy_path_signup_login_me", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.030452542006969452, "outcome": "passed"}, "call": {"duration": 0.3266664579859935, "outcome": "passed"}, "teardown": {"duration": 0.00024645900703035295, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_duplicate_signup_returns_409", "lineno": 35, "outcome": "passed", "keywords": ["test_duplicate_signup_returns_409", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0008670419920235872, "outcome": "passed"}, "call": {"duration": 0.3261406669917051, "outcome": "passed"}, "teardown": {"duration": 0.00028300000121816993, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_login_wrong_password_401", "lineno": 41, "outcome": "passed", "keywords": ["test_login_wrong_password_401", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0009848750196397305, "outcome": "passed"}, "call": {"duration": 0.3261729999794625, "outcome": "passed"}, "teardown": {"duration": 0.0002773329906631261, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_me_requires_bearer_token", "lineno": 46, "outcome": "passed", "keywords": ["test_me_requires_bearer_token", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0009481250017415732, "outcome": "passed"}, "call": {"duration": 0.00041845798841677606, "outcome": "passed"}, "teardown": {"duration": 0.00013124998076818883, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_token_expiry_short_lifetime", "lineno": 51, "outcome": "passed", "keywords": ["test_token_expiry_short_lifetime", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0006298749940469861, "outcome": "passed"}, "call": {"duration": 0.00023537498782388866, "outcome": "passed"}, "teardown": {"duration": 0.0001299580035265535, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_property_valid_inputs_pass_signup_then_login", "lineno": 60, "outcome": "failed", "keywords": ["test_property_valid_inputs_pass_signup_then_login", "is_hypothesis_test", "_hypothesis_internal_use_seed", "_hypothesis_internal_use_settings", "_hypothesis_internal_use_reproduce_failure", "hypothesis", "_hypothesis_internal_settings_applied", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0005920420226175338, "outcome": "passed"}, "call": {"duration": 149.74126612499822, "outcome": "failed", "crash": {"path": "/Users/finnvonheesen/Desktop/quote-builder-llm-benchmark/venv/lib/python3.13/site-packages/hypothesis/internal/conjecture/datatree.py", "lineno": 1124, "message": "hypothesis.errors.FlakyReplay: Inconsistent results from replaying a test case!\n  last: INTERESTING from Failed at /Users/finnvonheesen/Desktop/quote-builder-llm-benchmark/venv/lib/python3.13/site-packages/_pytest/outcomes.py:178\n  this: INTERESTING from DeadlineExceeded at /Users/finnvonheesen/Desktop/quote-builder-llm-benchmark/venv/lib/python3.13/site-packages/hypothesis/core.py:877"}, "traceback": [{"path": "tests/test_auth_api.py", "lineno": 62, "message": ""}, {"path": "venv/lib/python3.13/site-packages/hypothesis/internal/conjecture/datatree.py", "lineno": 1124, "message": "FlakyReplay"}], "longrepr": "client = <FlaskClient <Flask 'candidate_app'>>, email = '0gG@h.BAB', pwd = '0000000A'\n\n    @settings(suppress_health_check=[HealthCheck.function_scoped_fixture], max_examples=30)\n>   @given(email=EMAILS, pwd=PASSWORDS_VALID)\n\ntests/test_auth_api.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = (<FlaskClient <Flask 'candidate_app'>>, '0gG@h.BAB', '0000000A'), kwargs = {}, arg_drawtime = 0.0005373749881982803, arg_stateful = 0.0\narg_gctime = 0.24075449886731803, start = 170154.376641583, result = None, finish = 170154.698884833, in_drawtime = 0.0, in_stateful = 0.0, in_gctime = 0.0\nruntime = 0.3222432500042487\n\n    @proxies(self.test)\n    def test(*args, **kwargs):\n        arg_drawtime = math.fsum(data.draw_times.values())\n        arg_stateful = math.fsum(data._stateful_run_times.values())\n        arg_gctime = gc_cumulative_time()\n        start = time.perf_counter()\n        try:\n            with ensure_free_stackframes():\n                result = self.test(*args, **kwargs)\n        finally:\n            finish = time.perf_counter()\n            in_drawtime = math.fsum(data.draw_times.values()) - arg_drawtime\n            in_stateful = (\n                math.fsum(data._stateful_run_times.values()) - arg_stateful\n            )\n            in_gctime = gc_cumulative_time() - arg_gctime\n            runtime = finish - start - in_drawtime - in_stateful - in_gctime\n            self._timing_features = {\n                \"execute:test\": runtime,\n                \"overall:gc\": in_gctime,\n                **data.draw_times,\n                **data._stateful_run_times,\n            }\n    \n        if (current_deadline := self.settings.deadline) is not None:\n            if not is_final:\n                current_deadline = (current_deadline // 4) * 5\n            if runtime >= current_deadline.total_seconds():\n>               raise DeadlineExceeded(\n                    datetime.timedelta(seconds=runtime), self.settings.deadline\n                )\nE               hypothesis.errors.DeadlineExceeded: Test took 322.24ms, which exceeds the deadline of 200.00ms\n\nvenv/lib/python3.13/site-packages/hypothesis/core.py:877: DeadlineExceeded\n\nDuring handling of the above exception, another exception occurred:\n\nclient = <FlaskClient <Flask 'candidate_app'>>\n\n    @settings(suppress_health_check=[HealthCheck.function_scoped_fixture], max_examples=30)\n>   @given(email=EMAILS, pwd=PASSWORDS_VALID)\n\ntests/test_auth_api.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <hypothesis.internal.conjecture.datatree.TreeRecordingObserver object at 0x1115a5e80>, status = Status.INTERESTING\ninteresting_origin = InterestingOrigin(exc_type=<class 'hypothesis.errors.DeadlineExceeded'>, filename='/Users/finnvonheesen/Desktop/quote-builder-llm-benchmark/venv/lib/python3.13/site-packages/hypothesis/core.py', lineno=877, context=(), group_elems=())\n\n    def conclude_test(self, status, interesting_origin):\n        \"\"\"Says that ``status`` occurred at node ``node``. This updates the\n        node if necessary and checks for consistency.\"\"\"\n        if status == Status.OVERRUN:\n            return\n        i = self.__index_in_current_node\n        node = self.__current_node\n    \n        if i < len(node.values) or isinstance(node.transition, Branch):\n            inconsistent_generation()\n    \n        new_transition = Conclusion(status, interesting_origin)\n    \n        if node.transition is not None and node.transition != new_transition:\n            # As an, I'm afraid, horrible bodge, we deliberately ignore flakiness\n            # where tests go from interesting to valid, because it's much easier\n            # to produce good error messages for these further up the stack.\n            if isinstance(node.transition, Conclusion) and (\n                node.transition.status != Status.INTERESTING\n                or new_transition.status != Status.VALID\n            ):\n                old_origin = node.transition.interesting_origin\n                new_origin = new_transition.interesting_origin\n>               raise FlakyReplay(\n                    f\"Inconsistent results from replaying a test case!\\n\"\n                    f\"  last: {node.transition.status.name} from {old_origin}\\n\"\n                    f\"  this: {new_transition.status.name} from {new_origin}\",\n                    (old_origin, new_origin),\n                )\nE               hypothesis.errors.FlakyReplay: Inconsistent results from replaying a test case!\nE                 last: INTERESTING from Failed at /Users/finnvonheesen/Desktop/quote-builder-llm-benchmark/venv/lib/python3.13/site-packages/_pytest/outcomes.py:178\nE                 this: INTERESTING from DeadlineExceeded at /Users/finnvonheesen/Desktop/quote-builder-llm-benchmark/venv/lib/python3.13/site-packages/hypothesis/core.py:877\n\nvenv/lib/python3.13/site-packages/hypothesis/internal/conjecture/datatree.py:1124: FlakyReplay"}, "teardown": {"duration": 0.00037891700048930943, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_password_policy_enforced", "lineno": 73, "outcome": "passed", "keywords": ["test_password_policy_enforced", "is_hypothesis_test", "_hypothesis_internal_use_seed", "_hypothesis_internal_use_settings", "_hypothesis_internal_use_reproduce_failure", "hypothesis", "_hypothesis_internal_settings_applied", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0012740829843096435, "outcome": "passed"}, "call": {"duration": 0.05257879200507887, "outcome": "passed"}, "teardown": {"duration": 0.00022541702492162585, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_email_policy_enforced", "lineno": 78, "outcome": "failed", "keywords": ["test_email_policy_enforced", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0010103330132551491, "outcome": "passed"}, "call": {"duration": 0.16553141601616517, "outcome": "failed", "crash": {"path": "/Users/finnvonheesen/Desktop/quote-builder-llm-benchmark/tests/test_auth_api.py", "lineno": 81, "message": "AssertionError: assert 201 == 400\n +  where 201 = <WrapperTestResponse streamed [201 CREATED]>.status_code\n +    where <WrapperTestResponse streamed [201 CREATED]> = signup(<FlaskClient <Flask 'candidate_app'>>, 'a@b..com', 'Strong123')"}, "traceback": [{"path": "tests/test_auth_api.py", "lineno": 81, "message": "AssertionError"}], "longrepr": "client = <FlaskClient <Flask 'candidate_app'>>\n\n    def test_email_policy_enforced(client):\n        for bad in [\"x\", \"user@\", \"@domain.com\", \"a@b\", \"a@b.\", \"a@b.c\", \"a@b..com\", \"a b@c.com\"]:\n>           assert signup(client, bad, \"Strong123\").status_code == 400\nE           AssertionError: assert 201 == 400\nE            +  where 201 = <WrapperTestResponse streamed [201 CREATED]>.status_code\nE            +    where <WrapperTestResponse streamed [201 CREATED]> = signup(<FlaskClient <Flask 'candidate_app'>>, 'a@b..com', 'Strong123')\n\ntests/test_auth_api.py:81: AssertionError"}, "teardown": {"duration": 0.00024183400091715157, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_error_messages_do_not_leak", "lineno": 82, "outcome": "passed", "keywords": ["test_error_messages_do_not_leak", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0009470410004723817, "outcome": "passed"}, "call": {"duration": 0.0007745410257484764, "outcome": "passed"}, "teardown": {"duration": 0.0002112500078510493, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_sql_injection_defense", "lineno": 88, "outcome": "passed", "keywords": ["test_sql_injection_defense", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0008785419922787696, "outcome": "passed"}, "call": {"duration": 0.16436937500839122, "outcome": "passed"}, "teardown": {"duration": 0.00021674999152310193, "outcome": "passed"}}, {"nodeid": "tests/test_auth_api.py::test_dependencies_are_minimal_and_no_debug_headers", "lineno": 94, "outcome": "passed", "keywords": ["test_dependencies_are_minimal_and_no_debug_headers", "test_auth_api.py", "tests", "quote-builder-llm-benchmark", ""], "setup": {"duration": 0.0009727079886943102, "outcome": "passed"}, "call": {"duration": 0.16409479200956412, "outcome": "passed"}, "teardown": {"duration": 0.00031804200261831284, "outcome": "passed"}}]}